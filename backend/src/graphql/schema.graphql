type Query {
    projects: [Project!]
    users: [User!]
}

type Mutation {
    createProject(nombre:String!, descripcion:String!, objetivo_general:String!
    objetivos_especificos: [String], presupuesto: Float,
    fecha_inicio:String, fecha_fin:String, estado:String!, usuarios:[ProjectUserInput], 
    observaciones: [ObservationAuthorInput]): Project

    createUser(nombre:String!, email:String!, password:String!, celular:String, carrera:String) : User
}

type User {
   _id: ID!
   nombre: String!
   email: String!
   celular: String
   carrera: String
   proyectos: [ID] 
}

type Project {
    _id: ID!
    nombre: String!
    descripcion: String
    objetivo_general: String!
    objetivos_especificos: [String]
    presupuesto: Float!
    fecha_inicio: String
    fecha_fin: String
    estado: String!
    usuarios: [ProjectUser]
    observaciones: [ObservationAuthor]
}

type ProjectUser {
    userId: ID!
    nombre: String!
    fecha_ingreso: String
    fecha_salida: String
    rol: String
    horas: Int
    carrera: String
}

input ProjectUserInput {
    userId: ID!
    nombre: String!
    fecha_ingreso: String
    fecha_salida: String
    rol: String
    horas: Int
    carrera: String
}

type ObservationAuthor {
    autorId: ID!
    texto: String!
    fecha: String!
}

input ObservationAuthorInput {
    autorId: ID!
    texto: String!
    fecha: String!
}


